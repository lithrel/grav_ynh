#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

source .fonctions	# Loads the generic functions usually used in the script
source /usr/share/yunohost/helpers # Source YunoHost helpers

# See comments in install script
app=$YNH_APP_INSTANCE_NAME

# Retrieve app settings
domain=$(ynh_app_setting_get "$app" domain)
path=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)
multisite=$(ynh_app_setting_get "$app" multisite)
language=$(ynh_app_setting_get "$app" language)

CHECK_PATH	# Checks and corrects the syntax of the path.

# Check if admin is not null
if [[ "$is_public" = "" || "$language" = "" ]]; then
    echo "Unable to upgrade, please contact support"
    ynh_die
fi

final_path=$(ynh_app_setting_get "$app" final_path)

# Grav self upgrade
(cd $final_path && sudo bin/gpm selfupgrade)
# Some access rights are not correct after an upgrade
sudo chown -R www-data: $final_path

# Modify Nginx configuration file and copy it to Nginx conf directory
sudo sed -i "s@__PATHTOCHANGE__@$path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__FINALPATH__@$final_path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__NAMETOCHANGE__@$app@g" /etc/nginx/conf.d/$domain.d/$app.conf

if [ "$multisite" = "Yes" ];
then
	sudo sed -i "s@#--MULTISITE--@@g" /etc/nginx/conf.d/$domain.d/$app.conf
fi

if [ "$is_public" = "Yes" ];
then
	sudo sed -i "s@#--PRIVATE--@@g" /etc/nginx/conf.d/$domain.d/$app.conf
fi

# Setup SSOwat
ynh_app_setting_set "$app" is_public "$is_public"
if [ "$is_public" = "Yes" ];
then
  ynh_app_setting_set "$app" unprotected_uris "/"
fi

# Reload Nginx
sudo service nginx reload || true