#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

app=$YNH_APP_INSTANCE_NAME
version=1.1.17
SCRIPTPATH=$( cd $(dirname $0) ; pwd -P )

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
install_admin=$YNH_APP_ARG_INSTALL_ADMIN
private_admin=$YNH_APP_ARG_PRIVATE_ADMIN
create_admin=$YNH_APP_ARG_CREATE_ADMIN

# Source YunoHost helpers
. /usr/share/yunohost/helpers

# Removal of trailing /
if [ "$path" = "/" ]; then
    echo "Installation on the root of the domain"
else
    path=${path%/}
fi

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app \
    || ynh_die "Path not available: $domain$path"

# Save app settings
#sudo yunohost app setting $app admin -v "$admin"

# Create source directory
final_path=/var/www/$app
sudo mkdir -p $final_path
sudo chown -R www-data: $final_path

# App options
ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path "$path"
ynh_app_setting_set "$app" directory "$final_path"

# Modify Nginx configuration file and copy it to Nginx conf directory
if [ "$path" = "/" ]; then
    sudo sed -i "s@YNH_WWW_ROOT@$final_path@g" ../conf/nginx.conf
    sudo sed -i "s@YNH_WWW_LOC@$path@g" ../conf/nginx.conf
    sudo sed -i "s@YNH_WWW_TRY@@g" ../conf/nginx.conf
else
    path=${path%/}
    sudo sed -i "s@YNH_WWW_ROOT@/var/www@g" ../conf/nginx.conf
    sudo sed -i "s@YNH_WWW_LOC@$path@g" ../conf/nginx.conf
    sudo sed -i "s@YNH_WWW_TRY@$path@g" ../conf/nginx.conf
fi
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf


# Clone Grav Core & install Grav
echo "Cloning grav..."
sudo git clone https://github.com/getgrav/grav.git $final_path -b master
(cd $final_path && sudo php $final_path/bin/composer.phar install --no-dev -o)
sudo chown -R www-data: $final_path
(cd $final_path && sudo bin/grav install)

# Set permissions (again)
sudo chown -R www-data: $final_path

# Make app public if necessary
ynh_app_setting_set "$app" is_public "$is_public"
if [ "$is_public" = "Yes" ]; then
    ynh_app_setting_set "$app" unprotected_uris "/"
fi

# Install grav-plugin-admin
if [ "$install_admin" = "Yes" ]; then
    echo "[Grav] self-upgrade..."
    (cd $final_path && sudo bin/gpm selfupgrade -f)
    echo "[Grav] installing admin plugin..."
    (cd $final_path && sudo bin/gpm install -n admin)
    sudo chown -R www-data: $final_path
fi

# Make admin protected (if site is not)
if [ "$private_admin" = "Yes" ] && [ "$is_public" = "Yes" ]; then
    ynh_app_setting_set "$app" protected_uris "/admin"
fi

# Use SSOwat for admin interface
# add grav-plugin-httpbasicauth to use HTTP basic auth
# add grav-plugin-ynh to create first admin user
if [ "$install_admin" = "Yes" ] && [ "$private_admin" = "Yes" ] && [ "$create_admin" = "Yes" ]; then
    (cd $final_path && sudo bin/gpm install -n httpbasicauth)
    echo "Cloning grav-plugin-ynh..."
    sudo git clone https://github.com/lithrel/grav-plugin-ynh.git $final_path/user/plugins/ynh -b master
    sudo chown -R www-data: $final_path/user/plugins/httpbasicauth
    sudo chown -R www-data: $final_path/user/plugins/ynh
fi

# Set permissions (one last time)
sudo chown -R www-data: $final_path

sudo service nginx reload
sudo yunohost app ssowatconf